library("foreign")
rgdal::readOGR("../Raw Data/DHS/Geographic_Data_IND_2015_16/IAGE71FL.shp")
library("rgdal")
library("rgdal")
# Build a location dataframe to feed into pysocialwatcher's json_builder
survey_geolocations <- readOGR("../Raw Data/DHS/Geographic_Data_IND_2015_16/IAGE71FL.shp")
table(survey_geolocations@data$URBAN_RURA)
custom_location_df_DHS_IND$latitude <- survey_geolocations@data$LATNUM
custom_location_df_DHS_IND <- data.frame()
custom_location_df_DHS_IND$latitude <- survey_geolocations@data$LATNUM
custom_location_df_DHS_IND <- data.frame(28526)
custom_location_df_DHS_IND <- data.frame(rep(28526,28526)
)
custom_location_df_DHS_IND
custom_location_df_DHS_IND$latitude <- survey_geolocations@data$LATNUM
custom_location_df_DHS_IND$longitude <- survey_geolocations@data$LONGNUM
# According to DHS geolocation displacement methodology: https://dhsprogram.com/methodology/gps-data-collection.cfm
custom_location_df_DHS_IND$radius <- ifelse(survey_geolocations@data$URBAN_RURA == "U", 2,5)
custom_location_df_DHS_IND$distance_unit <- "kilometer"
custom_location_df_DHS_IND
no_rows <- nrow(survey_geolocations@data)
custom_location_df_DHS_IND <- data.frame(latitude = numeric(no_rows), longitude = numeric(no_rows), radius = numeric(no_rows), distance_unit = character(no_rows))
custom_location_df_DHS_IND$latitude <- survey_geolocations@data$LATNUM
custom_location_df_DHS_IND$longitude <- survey_geolocations@data$LONGNUM
# According to DHS geolocation displacement methodology: https://dhsprogram.com/methodology/gps-data-collection.cfm
custom_location_df_DHS_IND$radius <- ifelse(survey_geolocations@data$URBAN_RURA == "U", 2,5)
custom_location_df_DHS_IND$distance_unit <- "kilometer"
custom_location_df_DHS_IND
custom_location_df_DHS_IND <- data.frame(survey_cluster = survey_geolocations@data$DHSCLUST
latitude = numeric(no_rows),
custom_location_df_DHS_IND <- data.frame(survey_cluster = survey_geolocations@data$DHSCLUST,
latitude = numeric(no_rows),
longitude = numeric(no_rows),
radius = numeric(no_rows),
distance_unit = character(no_rows))
no_rows <- nrow(survey_geolocations@data)
custom_location_df_DHS_IND <- data.frame(survey_cluster = survey_geolocations@data$DHSCLUST,
latitude = numeric(no_rows),
longitude = numeric(no_rows),
radius = numeric(no_rows),
distance_unit = character(no_rows))
custom_location_df_DHS_IND$latitude <- survey_geolocations@data$LATNUM
custom_location_df_DHS_IND$longitude <- survey_geolocations@data$LONGNUM
# According to DHS geolocation displacement methodology: https://dhsprogram.com/methodology/gps-data-collection.cfm
custom_location_df_DHS_IND$radius <- ifelse(survey_geolocations@data$URBAN_RURA == "U", 2,5)
custom_location_df_DHS_IND$distance_unit <- "kilometer"
write.csv(custom_location_df_DHS_IND, "pySocialWatcher/Input/custom_location_df_DHS_IND.csv")
custom_location_df_DHS_IND
custom_location_df_DHS_IND <- data.frame(survey_cluster = survey_geolocations@data$DHSCLUST,
type = "custom_locations",
latitude = numeric(no_rows),
longitude = numeric(no_rows),
radius = numeric(no_rows),
distance_unit = character(no_rows))
# Build a location dataframe to feed into pysocialwatcher's json_builder
survey_geolocations <- readOGR("../Raw Data/DHS/Geographic_Data_IND_2015_16/IAGE71FL.shp")
no_rows <- nrow(survey_geolocations@data)
custom_location_df_DHS_IND <- data.frame(survey_cluster = survey_geolocations@data$DHSCLUST,
type = "custom_locations",
latitude = numeric(no_rows),
longitude = numeric(no_rows),
radius = numeric(no_rows),
distance_unit = character(no_rows))
custom_location_df_DHS_IND$latitude <- survey_geolocations@data$LATNUM
custom_location_df_DHS_IND$longitude <- survey_geolocations@data$LONGNUM
# According to DHS geolocation displacement methodology: https://dhsprogram.com/methodology/gps-data-collection.cfm
custom_location_df_DHS_IND$radius <- ifelse(survey_geolocations@data$URBAN_RURA == "U", 2,5)
custom_location_df_DHS_IND$distance_unit <- "kilometer"
write.csv(custom_location_df_DHS_IND, "pySocialWatcher/Input/custom_location_df_DHS_IND.csv")
custom_location_df_DHS_IND
# Build a location dataframe to feed into pysocialwatcher's json_builder
survey_geolocations <- readOGR("../Raw Data/DHS/Geographic_Data_IND_2015_16/IAGE71FL.shp")
no_rows <- nrow(survey_geolocations@data)
custom_location_df_DHS_IND <- data.frame(survey_cluster = survey_geolocations@data$DHSCLUST,
type = "custom_locations",
latitude = numeric(no_rows),
longitude = numeric(no_rows),
radius = numeric(no_rows),
distance_unit = character(no_rows))
custom_location_df_DHS_IND$latitude <- survey_geolocations@data$LATNUM
custom_location_df_DHS_IND$longitude <- survey_geolocations@data$LONGNUM
# According to DHS geolocation displacement methodology: https://dhsprogram.com/methodology/gps-data-collection.cfm
custom_location_df_DHS_IND$radius <- ifelse(survey_geolocations@data$URBAN_RURA == "U", 2,5)
custom_location_df_DHS_IND$distance_unit <- "kilometer"
write.csv(custom_location_df_DHS_IND, "pySocialWatcher/Input/custom_location_df_DHS_IND.csv")
custom_location_df_DHS_IND
custom_location_df_DHS_IND %>%
arrange(latitude)
library(dplyr)
library(dplyr)
custom_location_df_DHS_IND %>%
arrange(latitude)
custom_location_df_DHS_IND[custom_location_df_DHS_IND$latitude != 0,]
custom_location_df_DHS_IND <- custom_location_df_DHS_IND[custom_location_df_DHS_IND$latitude != 0,]
write.csv(custom_location_df_DHS_IND, "pySocialWatcher/Input/custom_location_df_DHS_IND.csv")
custom_location_df_DHS_IND %>%
arrange(desc(latitude))
sample(2000, nrow(custom_location_df_DHS_IND))
sample(nrow(custom_location_df_DHS_IND), 2000)
custom_location_df_DHS_IND[idx,]
idx <- sample(nrow(custom_location_df_DHS_IND), 2000)
sample_df <- custom_location_df_DHS_IND[idx,]
custom_location_df_DHS_IND <- data.frame(survey_cluster = survey_geolocations@data$DHSCLUST,
rural_urban = survey_geolocations@data$URBAN_RURA,
type = "custom_locations",
latitude = numeric(no_rows),
longitude = numeric(no_rows),
radius = numeric(no_rows),
distance_unit = character(no_rows))
custom_location_df_DHS_IND$latitude <- survey_geolocations@data$LATNUM
custom_location_df_DHS_IND$longitude <- survey_geolocations@data$LONGNUM
# According to DHS geolocation displacement methodology: https://dhsprogram.com/methodology/gps-data-collection.cfm
custom_location_df_DHS_IND$radius <- ifelse(survey_geolocations@data$URBAN_RURA == "U", 2,5)
custom_location_df_DHS_IND$distance_unit <- "kilometer"
custom_location_df_DHS_IND <- custom_location_df_DHS_IND[custom_location_df_DHS_IND$latitude != 0,]
write.csv(custom_location_df_DHS_IND, "pySocialWatcher/Input/custom_location_df_DHS_IND.csv")
write.csv(custom_location_df_DHS_IND, "pySocialWatcher/Input/custom_location_df_DHS_IND.csv")
# Get a sample
idx <- sample(nrow(custom_location_df_DHS_IND), 2000)
sample_df <- custom_location_df_DHS_IND[idx,]
table(sample_df$rural_urban)
plot(custom_location_df_DHS_IND$latitude, custom_location_df_DHS_IND$longitude)
plot(sample_df$latitude, sample_df$longitude)
plot(sample_df$longitude, sample_df$latitude)
sample_df$latitude,
plot(sample_df$latitude, sample_df$longitude)
write.csv(sample_df, "pySocialWatcher/Input/sample_custom_location_df_DHS_IND.csv")
